[{"path":[]},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"coverage-of-protected-areas-and-oecms","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"Coverage of protected areas and OECMs","title":"Marine Conservation Network Effectiveness Indicators","text":"","code":"totalarea <- as.numeric(sf::st_area(bioregion)) mpacoverage <- areas_zones |>    dplyr::rowwise() |>    dplyr::mutate(cover=ind_coverage(geoms,bioregion,intersection=TRUE,proportion=FALSE),                 mgmt=dplyr::if_else(MGMT_E==\"Fisheries And Oceans Canada\",                                     \"DFO\",                                     \"Other\")) |>    as.data.frame() |>    dplyr::group_by(TYPE_E,mgmt) |>    dplyr::summarise(`Bioregion Coverage (%)`=sum(cover)) totalcoverage <- sum(mpacoverage$`Bioregion Coverage (%)`) #The Scotian Shelf Bioregion is `r round(totalcoverage,2)`% covered by protected areas and OECMs. ggplot2::ggplot(mpacoverage)+   ggplot2::geom_col(ggplot2::aes(x=TYPE_E,y=`Bioregion Coverage (%)`))+   ggplot2::scale_x_discrete(guide = ggplot2::guide_axis(angle = 30))+   ggplot2::facet_wrap(~mgmt, scales=\"free\")+   ggplot2::theme_classic()+   ggplot2::theme(axis.title.x = ggplot2::element_blank())"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"protected-area-coverage-of-key-biodiversity-areas","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"Protected area coverage of Key Biodiversity Areas","title":"Marine Conservation Network Effectiveness Indicators","text":"protected areas OECMs cover round(kbacoverage,2)% EBSAs bioregion protected areas OECMs cover round(ebsacoverage,2)% EBSAs bioregion","code":"kbacoverage <- ind_coverage(areas,kba,intersection = TRUE) ebsacoverage <- ind_coverage(areas,ebsa,intersection = TRUE)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"protected-area-management-effectiveness-pame","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"Protected Area Management Effectiveness (PAME)","title":"Marine Conservation Network Effectiveness Indicators","text":"need pick method whole process MPC, now unquantified!","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"protconn","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"ProtConn","title":"Marine Conservation Network Effectiveness Indicators","text":"","code":"distkm <- calc_in_sea_distance(cellsize=100000,bioregion,areas)  PC <- data.frame() for(dkm in c(10,20,50,100,200)){   PC <- dplyr::bind_rows(PC,                          data.frame(dkm,                                     ProtConn = ind_ProtConn(distkm,dkm,bioregion)                          )) }  ggplot2::ggplot(PC |> dplyr::mutate(`Median Dispersal Distances (km)`=factor(dkm,levels=unique(dkm))))+   ggplot2::geom_col(ggplot2::aes(x=`Median Dispersal Distances (km)`,y=ProtConn))+   ggplot2::geom_hline(yintercept=sum(mpacoverage$cover),linetype = \"dashed\")+   ggplot2::theme_classic()"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"protected-area-connectedness-index-parc-connectedness","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"Protected Area Connectedness Index (PARC-Connectedness)","title":"Marine Conservation Network Effectiveness Indicators","text":"Terrestrial !","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"red-list-of-ecosystems-connectivity-indicator-in-development","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"Red List of Ecosystems Connectivity Indicator (in development)","title":"Marine Conservation Network Effectiveness Indicators","text":"development…","code":""},{"path":[]},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/articles/indicators.html","id":"species-protection-index","dir":"Articles","previous_headings":"Global Biodoversity Framework - Target 3","what":"Species Protection Index","title":"Marine Conservation Network Effectiveness Indicators","text":"Species Protection Index round(SPI,2)%","code":"SPI <- ind_coverage(areas,sarch,intersection = TRUE)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jaimie Harbin. Maintainer.","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c, role=c(\"aut\") cfe, comment=c)) (2024). MarConsNetAnalysis: Analyze sampling efforts Marine Protected Areas (MPAs). R package version 0.0.0.9000, https://dfo-mar-mpas.github.io/MarConsNetAnalysis/, https://github.com/dfo-mar-mpas/MarConsNetAnalysis.","code":"@Manual{,   title = {MarConsNetAnalysis: Analyze sampling efforts in Marine Protected Areas (MPAs)},   author = {{c} and comment=c),person(given=\"Remi\", family=\"Daigle\", email=\"remi.daigle@dfo-mpo.gc.ca\", role=c(\"aut\") and {comment=c))}},   year = {2024},   note = {R package version 0.0.0.9000, https://dfo-mar-mpas.github.io/MarConsNetAnalysis/},   url = {https://github.com/dfo-mar-mpas/MarConsNetAnalysis}, }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/index.html","id":"marconsnetanalysis","dir":"","previous_headings":"","what":"Analyze sampling efforts in Marine Protected Areas (MPAs)","title":"Analyze sampling efforts in Marine Protected Areas (MPAs)","text":"goal MarConsNetAnalysis …","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyze sampling efforts in Marine Protected Areas (MPAs)","text":"can install development version MarConsNetAnalysis GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dfo-mar-mpas/MarConsNetAnalysis\")"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analyze sampling efforts in Marine Protected Areas (MPAs)","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(MarConsNetAnalysis) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/MarConsNetAnalysis-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A Package for Analyzing MPA Data — MarConsNetAnalysis-package","title":"A Package for Analyzing MPA Data — MarConsNetAnalysis-package","text":"MarConsNetAnalysis package intended analyze real data  located transformed using MarConsNetData package.","code":""},{"path":[]},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/aggregate_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"aggregate indicator values into bins or objectives — aggregate_groups","title":"aggregate indicator values into bins or objectives — aggregate_groups","text":"aggregate indicator values bins objectives","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/aggregate_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aggregate indicator values into bins or objectives — aggregate_groups","text":"","code":"aggregate_groups(group_level, group_name, weights = 1, ...)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/aggregate_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aggregate indicator values into bins or objectives — aggregate_groups","text":"group_level Character string name group level (e.g. \"bin\" \"objective\") group_name Character string name group (e.g. \"Biomass Metrics\" \"Biodiversity\") weights numeric vector relative weight group component ... group components (e.g. indicator data.frames case bins)","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/aggregate_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aggregate indicator values into bins or objectives — aggregate_groups","text":"","code":"if (FALSE) { # \\dontrun{ # FIXME placeholder } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/calc_in_sea_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the 'in-sea' distance between polygons — calc_in_sea_distance","title":"Calculate the 'in-sea' distance between polygons — calc_in_sea_distance","text":"Calculate '-sea' distance polygons","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/calc_in_sea_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the 'in-sea' distance between polygons — calc_in_sea_distance","text":"","code":"calc_in_sea_distance(   cellsize = 1000,   bioregion,   areas,   units = \"km\",   crs = paste0(\"+proj=aeqd +lon_0=\", st_coordinates(st_centroid(bioregion))[1, 1],     \" +lat_0=\", st_coordinates(st_centroid(bioregion))[1, 2],     \" +datum=WGS84 +units=m +no_defs\") )"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/calc_in_sea_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the 'in-sea' distance between polygons — calc_in_sea_distance","text":"cellsize numeric target cellsize meters hexagonal cells distance opposite edges. edge length cellsize/sqrt(3)) bioregion sf polygon study area (.e. sea!) areas sf polygons among calculate distances. e.g. protected areas units character string output distance matrix. Either \"m\" \"km\" (default). crs target coordinate reference system: object class crs, input string st_crs","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/calc_in_sea_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the 'in-sea' distance between polygons — calc_in_sea_distance","text":"distance matrix","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/calc_in_sea_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the 'in-sea' distance between polygons — calc_in_sea_distance","text":"","code":"if (FALSE) { # \\dontrun{ require(MarConsNetData) bioregion <- data_bioregion() areas <- data_CPCAD_areas(bioregion,zones=FALSE) |>   dplyr::mutate(area=sf::st_area(geoms)) distkm <- calc_in_sea_distance(cellsize=100000,bioregion,areas) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/create_data_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates reports of Project Planning Tool data — create_data_report","title":"Creates reports of Project Planning Tool data — create_data_report","text":"function creates reports Project Planning Tool data","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/create_data_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates reports of Project Planning Tool data — create_data_report","text":"","code":"create_data_report(datas = NULL, combine = FALSE, destdir = \".\")"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/create_data_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates reports of Project Planning Tool data — create_data_report","text":"datas data frame list data frames obtained get_project_data() combine Boolean indicating datas combined single report. combine=FALSE item datas argument individual reports destdir parameter indicating save html report","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/create_data_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates reports of Project Planning Tool data — create_data_report","text":"","code":"if (FALSE) { # \\dontrun{ library(MarConsNetData) library(MarConsNetAnalysis) d <- get_project_data(ids=c(1093, 642)) create_data_report(datas=d) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_ProtConn.html","id":null,"dir":"Reference","previous_headings":"","what":"ProtConn — ind_ProtConn","title":"ProtConn — ind_ProtConn","text":"ProtConn","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_ProtConn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ProtConn — ind_ProtConn","text":"","code":"ind_ProtConn(distkm, dkm, bioregion, area = NULL)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_ProtConn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProtConn — ind_ProtConn","text":"distkm distance matrix km. Can created 'in_sea_distance()' package dkm median dispersal distance km negative exponential dispersal kernal (.e. p <- 1-pexp(distkm,log(2)/dkm)) bioregion sf polygon study area (.e. sea!) area output data_CPCAS_areas","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_ProtConn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ProtConn — ind_ProtConn","text":"numeric","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_ProtConn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ProtConn — ind_ProtConn","text":"","code":"if (FALSE) { # \\dontrun{ require(MarConsNetData) bioregion <- data_bioregion() areas <- data_CPCAD_areas(bioregion,zones=FALSE) |>   dplyr::mutate(area=sf::st_area(geoms)) distkm <- calc_in_sea_distance(cellsize=100000,bioregion,areas) PC <- ind_ProtConn(distkm,dkm=100, area=areas) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial coverage of x in y — ind_coverage","title":"Spatial coverage of x in y — ind_coverage","text":"Calculates percent proportion y (e.g. bioregion) spatially covered x (e.g. protected areas)","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial coverage of x in y — ind_coverage","text":"","code":"ind_coverage(x, y, intersection = FALSE, proportion = FALSE)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial coverage of x in y — ind_coverage","text":"x sf polygon whose area acts numerator fraction (e.g. protected areas) y sf polygon whose area acts denominator fraction (e.g. bioregion) intersection logical determines area spatial intersection x y used numerator (TRUE) , default, area x used numerator. proportion Logical determines function returns proportion (TRUE) , default (FALSE), percentage (.e. proportion X 100)","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial coverage of x in y — ind_coverage","text":"numeric","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial coverage of x in y — ind_coverage","text":"","code":"if (FALSE) { # \\dontrun{ require(MarConsNetData) bioregion <- data_bioregion() areas <- data_bioregion() ind_coverage(x=areas, y=bioregion) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_placeholder.html","id":null,"dir":"Reference","previous_headings":"","what":"Create example FAKE data — ind_placeholder","title":"Create example FAKE data — ind_placeholder","text":"Create example FAKE data","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_placeholder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create example FAKE data — ind_placeholder","text":"","code":"ind_placeholder(   ind_name = paste0(\"placeholder_\", round(runif(1, 1, 100))),   areas,   areaName = \"NAME_E\" )"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_placeholder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create example FAKE data — ind_placeholder","text":"areaName","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_placeholder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create example FAKE data — ind_placeholder","text":"","code":"if (FALSE) { # \\dontrun{ # FIXME placeholder } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_rv_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate species abundance from the RV survey — ind_rv_abundance","title":"Calculate species abundance from the RV survey — ind_rv_abundance","text":"function calculates average species catch per standardized tow 1.75 km year.","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_rv_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate species abundance from the RV survey — ind_rv_abundance","text":"","code":"ind_rv_abundance(   species = \"HADDOCK\",   area = \"Western/Emerald Banks Conservation Area (Restricted Fisheries Zone)\",   MPAs = NULL,   data = NULL )"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/ind_rv_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate species abundance from the RV survey — ind_rv_abundance","text":"species character indicating species analyze RV area area interest species MPAs object class \"sf\", likely data_CPCAD_areas contains name geoms protected areas data GSSPECIES get_data Mar.datawrangling package","code":""},{"path":[]},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/indicator_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Indicator Weights and Categorizations — indicator_weights","title":"Indicator Weights and Categorizations — indicator_weights","text":"relative weights categorizations (.e. EBM Pillars Objectives, indicator bins) indicators.Indicators part one bin listed multiple times.","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/indicator_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indicator Weights and Categorizations — indicator_weights","text":"","code":"indicator_weights"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/indicator_weights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Indicator Weights and Categorizations — indicator_weights","text":"data frame 129 rows 5 variables: indicator_name character name indicator indicator_bin character name indicator bin. applicability character geographic applicability indicator objective character name EBM objective bin weight double relative weight","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/indicator_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Indicator Weights and Categorizations — indicator_weights","text":"DETAILS","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_fishing_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot leaflet raster of fishing effort — plot_fishing_abundance","title":"Plot leaflet raster of fishing effort — plot_fishing_abundance","text":"FIXME","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_fishing_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot leaflet raster of fishing effort — plot_fishing_abundance","text":"","code":"plot_fishing_abundance(area = \"WEBCA\", CPCAD = NULL, indicator = FALSE)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_fishing_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot leaflet raster of fishing effort — plot_fishing_abundance","text":"area name area obtain objectives . Options include st_Anns_Bank_MPA, musquash_MPA, gully_MPA, WEBCA CPCAD \"sf\" \"dataframe\" object data_CPCAD_areas() indicator Boolean indicating","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_fishing_abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot leaflet raster of fishing effort — plot_fishing_abundance","text":"\"sf\" \"dataframe\" object","code":""},{"path":[]},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_flowerplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a flowerplot — plot_flowerplot","title":"Plot a flowerplot — plot_flowerplot","text":"Plot flowerplot","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_flowerplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a flowerplot — plot_flowerplot","text":"","code":"plot_flowerplot(   df,   grouping = \"grouping\",   labels = \"labels\",   score = \"score\",   weight = \"weight\",   title = unique(df[[\"area_name\"]]),   max_score = 100,   min_score = 0,   bintextsize = 3,   zeroline = FALSE )"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_flowerplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a flowerplot — plot_flowerplot","text":"df data.frame indicator scores, grouping, labels, relative weight grouping character string name grouping column df labels character string name labels column df score character string name score column df weight character string name weight column df title Defaults unique value area_name column df, can take character value. Alternatively, use FALSE avoid title. max_score numeric value maximum possible value scale (.e. petal length). Default 100 min_score numeric value minimum possible value scale (.e. petal length). Default 0","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_flowerplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a flowerplot — plot_flowerplot","text":"plot","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_flowerplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a flowerplot — plot_flowerplot","text":"","code":"indicatorbins <- data.frame(grouping=rep(c(\"Biodiversity\",                                            \"Habitat\",                                            \"Productivity\"),                                          times=c(3,5,3)),                             labels=c(\"Genetic Diversity\",                                      \"Species Diversity\",                                      \"Functional Diversity\",                                       \"Environmental Representativity\",                                      \"Key Fish Habitat\",                                      \"Connectivity\",                                      \"Uniqueness\",                                      \"Threats to Habitat\",                                       \"Biomass Metrics\",                                      \"Structure and Function\",                                      \"Threats to Productivity\"),                             score=runif(11,55,100),                             weight=1,                             area_name = \"Random Example MPA\")  plot_flowerplot(indicatorbins) #> Error in mutate(reframe(group_by(data.frame(grouping = factor(df[[grouping]],     levels = unique(df[[grouping]])), labels = factor(df[[labels]],     levels = unique(df[[labels]])), score = df[[score]], weight = df[[weight]]),     grouping, labels), score = weighted.mean(score, weight, na.rm = TRUE),     weight = sum(weight)), weight = weight/sum(weight), pos = cumsum(weight) -     weight/2, bg = if_else(is.nan(score), \"grey93\", \"white\")): ℹ In argument: `bg = if_else(is.nan(score), \"grey93\", \"white\")`. #> Caused by error in `if_else()`: #> ! could not find function \"if_else\""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates map of Project Planning Tool data — plot_map","title":"Creates map of Project Planning Tool data — plot_map","text":"function creates plot location Project Planning Tool data","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates map of Project Planning Tool data — plot_map","text":"","code":"plot_map(datas = NULL)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates map of Project Planning Tool data — plot_map","text":"datas data frame list data frames obtained get_project_data()","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates map of Project Planning Tool data — plot_map","text":"","code":"if (FALSE) { # \\dontrun{ library(MarConsNetData) library(MarConsNetAnalysis) d <- get_project_data(ids=c(1093, 642)) plot_map(datas=d) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_method_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a method comparison plot — plot_method_comparison","title":"Creates a method comparison plot — plot_method_comparison","text":"function creates method comparison plot data collected MPAs","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_method_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a method comparison plot — plot_method_comparison","text":"","code":"plot_method_comparison(datas = NULL, type = \"bar\")"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_method_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a method comparison plot — plot_method_comparison","text":"datas data frame list data frames obtained get_project_data() type argument indicating output . Options include bar, produces bar chart, venn, produces Venn Diagram, table, produces table.","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_method_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a method comparison plot — plot_method_comparison","text":"","code":"if (FALSE) { # \\dontrun{ library(MarConsNetData) library(MarConsNetAnalysis) d <- get_project_data(ids=c(1093, 642)) plot_method_comparison(datas=d) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_rv_abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Average number of species per tow per year — plot_rv_abundance","title":"Plot Average number of species per tow per year — plot_rv_abundance","text":"function plots average species catch per standardized tow 1.75 km year.","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_rv_abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Average number of species per tow per year — plot_rv_abundance","text":"","code":"plot_rv_abundance(abundance = NULL)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_rv_abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Average number of species per tow per year — plot_rv_abundance","text":"abundance data.frame likely ind_rv_abundance","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_rv_abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Average number of species per tow per year — plot_rv_abundance","text":"","code":"if (FALSE) { # \\dontrun{ rva <- ind_rv_abundance() plot_rv_abundance(rva) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_species_accumulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a species accumulation curve — plot_species_accumulation","title":"Creates a species accumulation curve — plot_species_accumulation","text":"function creates species accumulation plot data collected MPAs","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_species_accumulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a species accumulation curve — plot_species_accumulation","text":"","code":"plot_species_accumulation(datas = NULL)"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_species_accumulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a species accumulation curve — plot_species_accumulation","text":"datas data frame list data frames obtained get_project_data()","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/plot_species_accumulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a species accumulation curve — plot_species_accumulation","text":"","code":"if (FALSE) { # \\dontrun{ library(MarConsNetData) library(MarConsNetAnalysis) d <- get_project_data(ids=1093) plot_species_accumulation(datas=d) } # }"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/tar_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience that helps generate relevant paths to run the 'targets' pipeline — tar_paths","title":"Convenience that helps generate relevant paths to run the 'targets' pipeline — tar_paths","text":"Convenience helps generate relevant paths run 'targets' pipeline","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/tar_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience that helps generate relevant paths to run the 'targets' pipeline — tar_paths","text":"","code":"tar_paths(path = \"onedrive\")"},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/tar_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience that helps generate relevant paths to run the 'targets' pipeline — tar_paths","text":"path character string path return. Defaults \"onedrive\" return shared onedrive target store (.e. data). \"pkg\" \"inst\" return path \"_targets.R\" file (.e. instructions) installed package directory inst directory local git repo respectively.","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/tar_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience that helps generate relevant paths to run the 'targets' pipeline — tar_paths","text":"character string","code":""},{"path":"https://dfo-mar-mpas.github.io/MarConsNetAnalysis/reference/tar_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience that helps generate relevant paths to run the 'targets' pipeline — tar_paths","text":"","code":"onedrive_store <- tar_paths() #> Error in tar_paths(): You do not appear to have access to /MarConsNetTargets/app_targets"}]
